Traceback (most recent call last):
  File "/usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/local/Caskroom/mambaforge/base/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
levels_qid6 = ['0-1 years', '1-3 years', '4-7 years', '7-10 years', '10+ years']

df_ten = survey_results.copy()

# Keep only Faculty & Staff
df_ten = df_ten[df_ten["QID4"].isin(["Faculty", "Staff"])].copy()

count_contributed_staff_fac = df_ten["QID22"].value_counts()
pct_contributed_staff_fac = int(100*count_contributed_staff_fac/len(df))


glue("pct_contributed_staff_fac", pct_contributed_staff_fac, display=False)
glue("count_contributed_staff_fac", count_contributed_staff_fac, display=False)

# Make QID6 categorical with your level order
df_ten["QID6"] = pd.Categorical(df_ten["QID6"], categories=levels_qid6, ordered=True)

# Count per facet (QID4) and tenure bucket (QID6)
counts = (
    df_ten.groupby(["QID4", "QID6"], observed=True, dropna=False)
          .size()
          .reset_index(name="Count")
)

# Ensure every (QID4, QID6) pair appears (even if zero) so facets align
full_index = (
    pd.MultiIndex.from_product(
        [counts["QID4"].unique(), levels_qid6],
        names=["QID4", "QID6"]
    )
)
counts = (
    counts.set_index(["QID4", "QID6"])
          .reindex(full_index, fill_value=0)
          .reset_index()
)

# Plot: horizontal bars, facet per QID4, reverse y-order
fig = px.bar(
    counts,
    x="Count",
    y="QID6",
    facet_col="QID4",
    orientation="h",
    category_orders={"QID6": list(reversed(levels_qid6))},  # reverse like scale_y_discrete(limits = rev)
    color_discrete_sequence=[PRIMARY_COLOR],
)

# Style & tooltip (count)
fig.update_traces(
    marker_line_color="white",
    marker_line_width=0.5,
    hovertemplate="Years Served: %{y}<br>Count: %{x}<extra></extra>"
)

fig.update_layout(
    title="Years Served (Faculty vs Staff)",
    xaxis_title="Number of Responses",
    bargap=0.2,
    showlegend=False,
    margin=dict(t=60, l=20, r=20, b=40),
)
fig.for_each_annotation(lambda a: a.update(text=a.text.split("=")[-1]))

# Axis labels like your labs()
fig.for_each_yaxis(lambda a: a.update(title_text="Years Served"))
fig.for_each_xaxis(lambda a: a.update(title_text=""))

# Optional: save for Jupyter-Book embed
from pathlib import Path
Path("_static").mkdir(exist_ok=True, parents=True)
fig.write_html("_static/tenure_faculty_staff.html", full_html=False, include_plotlyjs="cdn")
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[4], line 9[0m
[1;32m      6[0m df_ten [38;5;241m=[39m df_ten[df_ten[[38;5;124m"[39m[38;5;124mQID4[39m[38;5;124m"[39m][38;5;241m.[39misin([[38;5;124m"[39m[38;5;124mFaculty[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mStaff[39m[38;5;124m"[39m])][38;5;241m.[39mcopy()
[1;32m      8[0m count_contributed_staff_fac [38;5;241m=[39m df_ten[[38;5;124m"[39m[38;5;124mQID22[39m[38;5;124m"[39m][38;5;241m.[39mvalue_counts()
[0;32m----> 9[0m pct_contributed_staff_fac [38;5;241m=[39m [38;5;28;43mint[39;49m[43m([49m[38;5;241;43m100[39;49m[38;5;241;43m*[39;49m[43mcount_contributed_staff_fac[49m[38;5;241;43m/[39;49m[38;5;28;43mlen[39;49m[43m([49m[43mdf[49m[43m)[49m[43m)[49m
[1;32m     12[0m glue([38;5;124m"[39m[38;5;124mpct_contributed_staff_fac[39m[38;5;124m"[39m, pct_contributed_staff_fac, display[38;5;241m=[39m[38;5;28;01mFalse[39;00m)
[1;32m     13[0m glue([38;5;124m"[39m[38;5;124mcount_contributed_staff_fac[39m[38;5;124m"[39m, count_contributed_staff_fac, display[38;5;241m=[39m[38;5;28;01mFalse[39;00m)

File [0;32m/usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages/pandas/core/series.py:248[0m, in [0;36m_coerce_method.<locals>.wrapper[0;34m(self)[0m
[1;32m    240[0m     warnings[38;5;241m.[39mwarn(
[1;32m    241[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mCalling [39m[38;5;132;01m{[39;00mconverter[38;5;241m.[39m[38;5;18m__name__[39m[38;5;132;01m}[39;00m[38;5;124m on a single element Series is [39m[38;5;124m"[39m
[1;32m    242[0m         [38;5;124m"[39m[38;5;124mdeprecated and will raise a TypeError in the future. [39m[38;5;124m"[39m
[0;32m   (...)[0m
[1;32m    245[0m         stacklevel[38;5;241m=[39mfind_stack_level(),
[1;32m    246[0m     )
[1;32m    247[0m     [38;5;28;01mreturn[39;00m converter([38;5;28mself[39m[38;5;241m.[39miloc[[38;5;241m0[39m])
[0;32m--> 248[0m [38;5;28;01mraise[39;00m [38;5;167;01mTypeError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mcannot convert the series to [39m[38;5;132;01m{[39;00mconverter[38;5;132;01m}[39;00m[38;5;124m"[39m)

[0;31mTypeError[0m: cannot convert the series to <class 'int'>

