Traceback (most recent call last):
  File "/Users/mariaoros/Documents/DSI/2026/open_source_survey_results_myst/venv/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
    ~~~~~~~~~~~~~~~~~~~~~~~~^^
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/mariaoros/Documents/DSI/2026/open_source_survey_results_myst/venv/lib/python3.13/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "/Users/mariaoros/Documents/DSI/2026/open_source_survey_results_myst/venv/lib/python3.13/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/mariaoros/Documents/DSI/2026/open_source_survey_results_myst/venv/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/Users/mariaoros/Documents/DSI/2026/open_source_survey_results_myst/venv/lib/python3.13/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "/Users/mariaoros/Documents/DSI/2026/open_source_survey_results_myst/venv/lib/python3.13/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/mariaoros/Documents/DSI/2026/open_source_survey_results_myst/venv/lib/python3.13/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
os_tools_pct = prop(df["QID13"], lambda s: s == "Yes")
glue("respondents_pct", respondents_pct, display=False)
 
# Text processing for word frequency analysis
rm_terms = {
    'open', 'and', 'source', 'analysis', 'use', 'used', 'data', 'many', 'software',
    'programming', 'language', 'languages', 'tools', 'code', 'etc', 'package',
    'packages', 'list', 'everything', 'including', 'libraries', 'like',
    'various', 'research', 'statistical', 'ecosystem', 'opensource', 'web',
    'google', 'system', 'compilers', 'academy', 'numerous', 'systems'
}

def clean_text(text):
    if pd.isna(text):
        return ""
    # Convert to lowercase and remove punctuation
    text = re.sub(r'[^\w\s]', ' ', text.lower())
    # Split into words and filter
    words = [word for word in text.split() 
             if word not in rm_terms and len(word) > 2]
    return ' '.join(words)

# Process text responses
tools_text = df['QID15'].dropna().apply(clean_text)
all_words = ' '.join(tools_text).split()
word_freq = Counter(all_words)

# Create dataframe for plotting
tools_highlight = ['python', 'r', 'julia', 'git', 'latex']
top_25_words = dict(word_freq.most_common(25))

tools_df = pd.DataFrame([
    {'word': word, 'freq': freq, 'pct': freq / len(df)}
    for word, freq in top_25_words.items()
    if word != 'â€¢'
]).sort_values('freq')

# Create lollipop plot
fig4 = go.Figure()

colors = ['#1f77b4' if word in tools_highlight else '#7f7f7f' 
          for word in tools_df['word']]

fig4.add_trace(go.Scatter(
    x=tools_df['pct'],
    y=tools_df['word'],
    mode='markers+lines',
    marker=dict(size=8, color=colors),
    line=dict(color='lightgray', width=1),
    orientation='h',
    hovertemplate='Tool: %{y}<br>Percent: %{x:.2%}<extra></extra>'
))

# Add line segments
for i, row in tools_df.iterrows():
    fig4.add_shape(
        type="line",
        x0=0, x1=row['pct'],
        y0=row['word'], y1=row['word'],
        line=dict(color=colors[i], width=2)
    )

fig4.update_layout(
    xaxis=dict(
        title="Responses Identifying Open Source Tool Use",
        tickformat='.0%'
    ),
    yaxis_title="",
    showlegend=False,
    plot_bgcolor="white",
    paper_bgcolor="white"
)
fig4.show()
fig4.write_html('_static/tools_lollipop.html', full_html=False, include_plotlyjs='cdn')
------------------


[31m---------------------------------------------------------------------------[39m
[31mNameError[39m                                 Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[6][39m[32m, line 2[39m
[32m      1[39m os_tools_pct = prop(df[[33m"[39m[33mQID13[39m[33m"[39m], [38;5;28;01mlambda[39;00m s: s == [33m"[39m[33mYes[39m[33m"[39m)
[32m----> [39m[32m2[39m glue([33m"[39m[33mrespondents_pct[39m[33m"[39m, [43mrespondents_pct[49m, display=[38;5;28;01mFalse[39;00m)
[32m      4[39m [38;5;66;03m# Text processing for word frequency analysis[39;00m
[32m      5[39m rm_terms = {
[32m      6[39m     [33m'[39m[33mopen[39m[33m'[39m, [33m'[39m[33mand[39m[33m'[39m, [33m'[39m[33msource[39m[33m'[39m, [33m'[39m[33manalysis[39m[33m'[39m, [33m'[39m[33muse[39m[33m'[39m, [33m'[39m[33mused[39m[33m'[39m, [33m'[39m[33mdata[39m[33m'[39m, [33m'[39m[33mmany[39m[33m'[39m, [33m'[39m[33msoftware[39m[33m'[39m,
[32m      7[39m     [33m'[39m[33mprogramming[39m[33m'[39m, [33m'[39m[33mlanguage[39m[33m'[39m, [33m'[39m[33mlanguages[39m[33m'[39m, [33m'[39m[33mtools[39m[33m'[39m, [33m'[39m[33mcode[39m[33m'[39m, [33m'[39m[33metc[39m[33m'[39m, [33m'[39m[33mpackage[39m[33m'[39m,
[32m   (...)[39m[32m     10[39m     [33m'[39m[33mgoogle[39m[33m'[39m, [33m'[39m[33msystem[39m[33m'[39m, [33m'[39m[33mcompilers[39m[33m'[39m, [33m'[39m[33macademy[39m[33m'[39m, [33m'[39m[33mnumerous[39m[33m'[39m, [33m'[39m[33msystems[39m[33m'[39m
[32m     11[39m }

[31mNameError[39m: name 'respondents_pct' is not defined

