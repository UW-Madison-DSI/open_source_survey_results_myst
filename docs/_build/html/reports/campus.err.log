Traceback (most recent call last):
  File "/Users/mariaoros/Documents/DSI/2026/open_source_survey_results_myst/venv/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
    ~~~~~~~~~~~~~~~~~~~~~~~~^^
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/mariaoros/Documents/DSI/2026/open_source_survey_results_myst/venv/lib/python3.13/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "/Users/mariaoros/Documents/DSI/2026/open_source_survey_results_myst/venv/lib/python3.13/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/mariaoros/Documents/DSI/2026/open_source_survey_results_myst/venv/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/Users/mariaoros/Documents/DSI/2026/open_source_survey_results_myst/venv/lib/python3.13/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "/Users/mariaoros/Documents/DSI/2026/open_source_survey_results_myst/venv/lib/python3.13/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/mariaoros/Documents/DSI/2026/open_source_survey_results_myst/venv/lib/python3.13/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# ----- Figure 2: "There is a vibrant culture at UNI" by Respondent Type -----

qid23_order = [
    "Strongly agree",
    "Somewhat agree", 
    "Neither agree nor disagree",
    "Somewhat disagree",
    "Strongly disagree",
]
df_c2 = (
    df.assign(
        QID4=df["QID4"].map(fill_unaffiliated),
        QID23=pd.Categorical(df["QID23"], categories=qid23_order, ordered=True)
    )
    .rename(columns={"QID4": "Respondent Type"})
)

c2_df = (
    df_c2.groupby(["QID23", "Respondent Type"], dropna=False)
         .size()
         .reset_index(name="Count")
)
c2_df["Percent"] = c2_df["Count"] / len(df)

fig2 = px.bar(
    c2_df, x="QID23", y="Percent",
    color="Respondent Type",
    barmode="stack",
    title='"The university has a vibrant open source culture"'
)
fig2.update_layout(
    yaxis=dict(tickformat=".1%"),
    xaxis_title="",
    plot_bgcolor="white",
    paper_bgcolor="white"
)
fig2.show()
fig2.write_html('docs/plotly_example.html', full_html=False, include_plotlyjs='cdn')
------------------

----- stderr -----
/var/folders/93/h3g2jvn15rs8w2h9w6hcv55h0000gn/T/ipykernel_34327/1391036603.py:19: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
------------------

[31m---------------------------------------------------------------------------[39m
[31mFileNotFoundError[39m                         Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[4][39m[32m, line 38[39m
[32m     31[39m fig2.update_layout(
[32m     32[39m     yaxis=[38;5;28mdict[39m(tickformat=[33m"[39m[33m.1[39m[33m%[39m[33m"[39m),
[32m     33[39m     xaxis_title=[33m"[39m[33m"[39m,
[32m     34[39m     plot_bgcolor=[33m"[39m[33mwhite[39m[33m"[39m,
[32m     35[39m     paper_bgcolor=[33m"[39m[33mwhite[39m[33m"[39m
[32m     36[39m )
[32m     37[39m fig2.show()
[32m---> [39m[32m38[39m [43mfig2[49m[43m.[49m[43mwrite_html[49m[43m([49m[33;43m'[39;49m[33;43mdocs/plotly_example.html[39;49m[33;43m'[39;49m[43m,[49m[43m [49m[43mfull_html[49m[43m=[49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m[43m [49m[43minclude_plotlyjs[49m[43m=[49m[33;43m'[39;49m[33;43mcdn[39;49m[33;43m'[39;49m[43m)[49m

[36mFile [39m[32m~/Documents/DSI/2026/open_source_survey_results_myst/venv/lib/python3.13/site-packages/plotly/basedatatypes.py:3712[39m, in [36mBaseFigure.write_html[39m[34m(self, *args, **kwargs)[39m
[32m   3609[39m [38;5;250m[39m[33;03m"""[39;00m
[32m   3610[39m [33;03mWrite a figure to an HTML file representation[39;00m
[32m   3611[39m 
[32m   (...)[39m[32m   3708[39m [33;03mNone[39;00m
[32m   3709[39m [33;03m"""[39;00m
[32m   3710[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mplotly[39;00m[34;01m.[39;00m[34;01mio[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[34;01mpio[39;00m
[32m-> [39m[32m3712[39m [38;5;28;01mreturn[39;00m [43mpio[49m[43m.[49m[43mwrite_html[49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m

[36mFile [39m[32m~/Documents/DSI/2026/open_source_survey_results_myst/venv/lib/python3.13/site-packages/plotly/io/_html.py:503[39m, in [36mwrite_html[39m[34m(fig, file, config, auto_play, include_plotlyjs, include_mathjax, post_script, full_html, animation_opts, validate, default_width, default_height, auto_open, div_id)[39m
[32m    500[39m [38;5;66;03m# Write HTML string[39;00m
[32m    501[39m [38;5;28;01mif[39;00m path [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m    502[39m     [38;5;66;03m# To use a different file encoding, pass a file descriptor[39;00m
[32m--> [39m[32m503[39m     [43mpath[49m[43m.[49m[43mwrite_text[49m[43m([49m[43mhtml_str[49m[43m,[49m[43m [49m[33;43m"[39;49m[33;43mutf-8[39;49m[33;43m"[39;49m[43m)[49m
[32m    504[39m [38;5;28;01melse[39;00m:
[32m    505[39m     file.write(html_str)

[36mFile [39m[32m/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_local.py:555[39m, in [36mPath.write_text[39m[34m(self, data, encoding, errors, newline)[39m
[32m    552[39m [38;5;66;03m# Call io.text_encoding() here to ensure any warning is raised at an[39;00m
[32m    553[39m [38;5;66;03m# appropriate stack level.[39;00m
[32m    554[39m encoding = io.text_encoding(encoding)
[32m--> [39m[32m555[39m [38;5;28;01mreturn[39;00m [43mPathBase[49m[43m.[49m[43mwrite_text[49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43mdata[49m[43m,[49m[43m [49m[43mencoding[49m[43m,[49m[43m [49m[43merrors[49m[43m,[49m[43m [49m[43mnewline[49m[43m)[49m

[36mFile [39m[32m/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_abc.py:651[39m, in [36mPathBase.write_text[39m[34m(self, data, encoding, errors, newline)[39m
[32m    648[39m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(data, [38;5;28mstr[39m):
[32m    649[39m     [38;5;28;01mraise[39;00m [38;5;167;01mTypeError[39;00m([33m'[39m[33mdata must be str, not [39m[38;5;132;01m%s[39;00m[33m'[39m %
[32m    650[39m                     data.[34m__class__[39m.[34m__name__[39m)
[32m--> [39m[32m651[39m [38;5;28;01mwith[39;00m [38;5;28;43mself[39;49m[43m.[49m[43mopen[49m[43m([49m[43mmode[49m[43m=[49m[33;43m'[39;49m[33;43mw[39;49m[33;43m'[39;49m[43m,[49m[43m [49m[43mencoding[49m[43m=[49m[43mencoding[49m[43m,[49m[43m [49m[43merrors[49m[43m=[49m[43merrors[49m[43m,[49m[43m [49m[43mnewline[49m[43m=[49m[43mnewline[49m[43m)[49m [38;5;28;01mas[39;00m f:
[32m    652[39m     [38;5;28;01mreturn[39;00m f.write(data)

[36mFile [39m[32m/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_local.py:537[39m, in [36mPath.open[39m[34m(self, mode, buffering, encoding, errors, newline)[39m
[32m    535[39m [38;5;28;01mif[39;00m [33m"[39m[33mb[39m[33m"[39m [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m mode:
[32m    536[39m     encoding = io.text_encoding(encoding)
[32m--> [39m[32m537[39m [38;5;28;01mreturn[39;00m [43mio[49m[43m.[49m[43mopen[49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43mmode[49m[43m,[49m[43m [49m[43mbuffering[49m[43m,[49m[43m [49m[43mencoding[49m[43m,[49m[43m [49m[43merrors[49m[43m,[49m[43m [49m[43mnewline[49m[43m)[49m

[31mFileNotFoundError[39m: [Errno 2] No such file or directory: 'docs/plotly_example.html'

