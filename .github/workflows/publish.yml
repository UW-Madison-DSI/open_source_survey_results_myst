name: Build and Deploy Jupyter Book

on:
  # Trigger the workflow on push to main branch
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'requirements-docs.txt'
      - '.github/workflows/jb-pages.yml'

  # Allow manual triggering
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for proper git info

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Cache Jupyter Book build
        uses: actions/cache@v3
        with:
          path: docs/_build
          key: jb-build-${{ runner.os }}-${{ hashFiles('docs/**/*.md', 'docs/_config.yml', 'docs/_toc.yml') }}
          restore-keys: |
            jb-build-${{ runner.os }}-

      - name: Install dependencies
        run: |
          pip install -r requirements-docs.txt

      - name: Validate configuration
        run: |
          echo "Validating Jupyter Book configuration..."
          python -c "import yaml; yaml.safe_load(open('docs/_config.yml'))"
          python -c "import yaml; yaml.safe_load(open('docs/_toc.yml'))"
          echo "Configuration validation passed!"

      - name: Build Jupyter Book
        run: |
          jupyter-book build docs/

      - name: Upload build artifacts
        uses: actions/upload-pages-artifact@v2
        with:
          path: docs/_build/html

  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2